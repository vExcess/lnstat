const fs=require("fs");function isDir(a){return fs.lstatSync(a).isDirectory()}function getFileExt(a){let n=a.length-1;for(;n>0;){if(a.charAt(n)==="/")return"";if(a.charAt(n)==="."){let m=a.slice(n+1);return(m==="cjs"||m==="mjs")&&(m="js"),m}n--}return""}const extNameMap={js:"JavaScript",html:"HTML",css:"CSS",json:"JSON",ts:"TypeScript",md:"Markdown",py:"Python",java:"Java",rs:"Rust",zig:"Zig",c:"C",cpp:"C++",cs:"C#",csx:"C# (csx)",txt:"Plain Text",csv:"CSV"};async function getFileStats(a,n){return new Promise(m=>{const l={lines:0,code:0,comments:0,blanks:0},i=fs.createReadStream(a,{encoding:"utf8"});let r=!0,d=!1,e=!1,t=!1,s=!1,g="",o=!1,p="";i.on("data",f=>{let S=0,h=0,x=0;if(r&&(f.length>1&&S++,r=!1),["zig","rs"].includes(n)){const c=f.split(`
`);S=c.length;for(let u=0;u<c.length;u++){const b=c[u].trimStart();b.length===0?x++:b.startsWith("//")&&h++}}else if(["py"].includes(n)){const c=f.split(`
`);S=c.length;for(let u=0;u<c.length;u++){const b=c[u].trimStart();b.length===0?x++:b.startsWith("#")&&h++}}else if(["html","xml","md"].includes(n)){f=p+f;let c=0;for(;c<f.length-3;){const u=f[c];u===`
`?(o?x++:e&&h++,S++,o=!0):" 	".includes(u)||(o=!1,!e&&f.slice(c).startsWith("<!--")?(h++,e=!0,c+=3):e&&f.slice(c).startsWith("-->")&&(e=!1,c+=2)),c++}p=f.slice(f.length-3)}else if(["js","ts","java","c","cpp","cs","csx","css"].includes(n)){f=p+f;let c=0;for(;c<f.length-1;){const u=f[c];if(u===`
`)o?x++:e&&h++,d=!1,S++,o=!0;else if(!" 	".includes(u))if(o=!1,!e&&!d){if((t||s)&&u==="\\"){c+=2;continue}!t&&!s&&u==="/"?f[c+1]==="/"&&n!=="css"?(h++,d=!0,c++):f[c+1]==="*"&&(h++,e=!0,c++):u==='"'?t&&g==='"'?t=!1:t||(t=!0,g='"'):u==="'"?t&&g==="'"?t=!1:t||(t=!0,g="'"):u==="`"&&["js","ts"].includes(n)&&(s&&g==="`"?s=!1:s||(s=!0,g="`"))}else e&&u==="*"&&f[c+1]==="/"&&(e=!1,c++);c++}p=f[f.length-1]}else{const c=f.split(`
`);S=c.length;for(let u=0;u<c.length;u++)c[u].trimStart().length===0&&x++}l.lines+=S,l.comments+=h,l.blanks+=x,l.code+=S-h-x}).on("end",()=>{m(l)})})}async function getDirStats(a,n,m=0){const l={path:a,extsStats:new Map,subDirs:[]},i=fs.readdirSync(a);for(let r=0;r<i.length;r++){if(m===0){r>0&&process.stdout.write("\r\x1B[K");const e=Math.round(r/i.length*100);process.stdout.write(`[${"#".repeat(e/2)}${"-".repeat(50-e/2)}] ${e}% Complete`)}const d=i[r];if(d.charAt(0)!=="."||n.includeDotfiles){let e;if(a.endsWith("/")?e=a+d.replaceAll("\\","/"):e=a+"/"+d.replaceAll("\\","/"),isDir(e)){const t=await getDirStats(e,n,m+1);l.subDirs.push(t);const s=Array.from(t.extsStats.entries());for(let g=0;g<s.length;g++){const o=s[g][0],p=s[g][1];let f=l.extsStats.get(o);f||(f={files:0,lines:0,code:0,comments:0,blanks:0},l.extsStats.set(o,f));for(const S in p)f[S]+=p[S]}}else{let t=!1;for(let o=0;o<n.excludeRegexes.length;o++)if(n.excludeRegexes[o].test(e)){t=!0;break}for(let o=0;o<n.filterRegexes.length;o++)if(!n.filterRegexes[o].test(e)){t=!0;break}if(t)continue;const s=getFileExt(e),g=extNameMap[s];if(s.length!==0&&(g||n.includeUnsupported)){let o=l.extsStats.get(s);if(o||(o={files:0,lines:0,code:0,comments:0,blanks:0},l.extsStats.set(s,o)),o.files++,g){const p=await getFileStats(e,s);for(const f in p)o[f]+=p[f]}}}}}return m===0&&process.stdout.write("\r\x1B[K"),l}function tablizeDirStats(a,n,m){const l=Array.from(a.extsStats.entries()),i=[0,0,0,0,0];for(let e=0;e<l.length;e++){const t=l[e][1];i[0]+=t.files,i[1]+=t.lines,i[2]+=t.code,i[3]+=t.comments,i[4]+=t.blanks}function r(e,t){return""+Math.round(e/t*100)+"%"}const d=[[a.path,""+i[0],""+i[1],[r(i[2],i[1]),""+i[2]],[r(i[3],i[1]),""+i[3]],[r(i[4],i[1]),""+i[4]]]];l.sort((e,t)=>t[1].lines-e[1].lines);for(let e=0;e<l.length;e++){const t=l[e][0],s=l[e][1],g=t,p=String.fromCharCode(e<l.length-1?9500:9492)+"\u2500 ",f=extNameMap[g]??t;s.lines!==0?d.push([p+f,""+s.files,[r(s.lines,i[1]),""+s.lines],[r(s.code,s.lines),""+s.code],[r(s.comments,s.lines),""+s.comments],[r(s.blanks,s.lines),""+s.blanks]]):d.push([p+f,""+s.files,["",""],["",""],["",""],["",""]])}if(n<m){const e=[d];return a.subDirs.forEach(t=>{const s=tablizeDirStats(t,n+1,m);let g=s[0][0];g=g.replace(a.path,""),g=(g.startsWith("/")?"...":".../")+g,s[0][0]=g,e.push(s)}),e}else return d}function mkRow(a,n,m){let l="";for(let i=0;i<a.length;i++){const r=a[i];let d="";typeof r=="string"?m[i]?d=r.padStart(n[i]," "):d=r.padEnd(n[i]," "):d=r[0].padEnd(n[i]-r[1].length," ")+r[1],l+=" "+d+" \u23AA"}return l}function displayResults(a){const n=["Language","Files","Lines","Code","Comments","Blanks"],m=[!1,!0,!0,!0,!0,!0];let l=n.map(e=>e.length);for(let e=0;e<a.length;e++){const t=a[e];for(let s=0;s<t.length;s++){const g=t[s];for(let o=0;o<g.length;o++){const p=g[o];typeof p=="string"?p.length>l[o]&&(l[o]=p.length):p[1].length+6>l[o]&&(l[o]=p[1].length+6)}}}l=l.map((e,t)=>t>2?e+2:e);const i=mkRow(n,l,Array(6).fill(!1)),r="\u2501".repeat(i.length),d=l.map(e=>"\u2500".repeat(e+2)).join("\u2534")+"\u2518";console.log(r),console.log(i),console.log(r);for(let e=0;e<a.length;e++){const t=a[e];for(let s=0;s<t.length;s++)console.log(mkRow(t[s],l,m));console.log(d)}}function showHelp(){const a=[["-iu, --include-unsupported","Include file count for unsupported file types"],["-id, --include-dotfiles","Include hidden directories"],["-e,  --exclude=<regex>","Skip paths matching given regex"],["-f,  --filter=<regex>","Skip paths not matching given regex"],["-h,  --help","Show this dialog"]].map(n=>"  "+n[0].padEnd(28," ")+n[1]).join(`
`);console.log([`usage: lnstat <path> [options]
       lnstat [options] <path>`,`
options:
`+a,`
examples:
    lnstat ./node_modules -f=".*\\.ts"
    lnstat --exclude=.*\\.css -ia ./
    lnstat index.js`].join(`
`))}async function main(){const a=process.argv.slice(2);let n=!1,m=!1,l=[],i=[];for(let e=0;e<a.length;e++){const t=a[e];if(t==="--include-unsupported"||t==="-iu")n=!0;else if(t==="--include-dotfiles"||t==="-id")m=!0;else if(t.startsWith("--exclude=")||t.startsWith("-e="))l.push(new RegExp(t.slice(t.indexOf("=")+1)));else if(t.startsWith("--filter=")||t.startsWith("-f="))i.push(new RegExp(t.slice(t.indexOf("=")+1)));else if(t==="--help"||t==="-h"||t==="-help"){showHelp();return}}let r=a.find(e=>e[0]!=="-");if(r)r=r.replaceAll("\\","/");else{showHelp();return}let d;if(isDir(r)){const e=await getDirStats(r,{includeUnsupported:n,includeDotfiles:m,excludeRegexes:l,filterRegexes:i});d=tablizeDirStats(e,0,1)}else{const e=getFileExt(r),t=await getFileStats(r,e),s={path:r,extsStats:new Map,subDirs:[]};s.extsStats.set(e,{files:1,lines:t.lines,code:t.code,comments:t.comments,blanks:t.blanks}),d=tablizeDirStats(s,0,1)}displayResults(d)}main();
